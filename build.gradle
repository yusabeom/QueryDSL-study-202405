plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 쿼리 파라미터 추가 외부 로그 남기기
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 * //querydsl 추가 시작
 //queryDsl은 내부적으로 Entity 클래스를 인식해서 그와 비슷한 모양의 QClass를 제작합니다.
 //이 QClass를 이용해서 Entity의 타입을 검증할 수 있고, 그에 맞는 쿼리문을 builder 형태로
 //제작합니다.
 //밑에 작성된 내용은 QClass의 생성 디렉토리 지정 및 프로젝트 build 시 컴파일 명령문 등을
 //세팅해 놓은 코드입니다.
 */
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}